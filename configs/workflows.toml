# Workflow Automation Configuration
# Smart scan sequences and conditional execution

[triggers]
# Technology-based scan triggers
# Define patterns that trigger additional scans when detected

[triggers.web_technologies]
wordpress = ["wordpress", "wp-content", "wp-admin", "wp-includes", "/wp-"]
drupal = ["drupal", "sites/default", "misc/drupal.js"]
joomla = ["joomla", "administrator/", "components/com_"]
apache = ["Apache", "httpd", "Server: Apache"]
nginx = ["nginx", "Server: nginx"]
iis = ["Microsoft-IIS", "Server: Microsoft-IIS"]
php = ["X-Powered-By: PHP", "<?php", ".php"]
asp = ["X-AspNet-Version", "X-Powered-By: ASP.NET"]
nodejs = ["X-Powered-By: Express", "Server: Express"]

[triggers.services]
ssh = { ports = [22], patterns = ["SSH-", "OpenSSH"] }
ftp = { ports = [21], patterns = ["220 ", "FTP server"] }
telnet = { ports = [23], patterns = ["Telnet"] }
smtp = { ports = [25, 465, 587], patterns = ["220 ", "SMTP"] }
http = { ports = [80, 8080, 8000], patterns = ["HTTP/"] }
https = { ports = [443, 8443], patterns = ["HTTP/", "SSL", "TLS"] }
mysql = { ports = [3306], patterns = ["mysql"] }
postgresql = { ports = [5432], patterns = ["PostgreSQL"] }
mongodb = { ports = [27017], patterns = ["MongoDB"] }
redis = { ports = [6379], patterns = ["Redis"] }

[sequences]
# Predefined scan sequences

[sequences.web_discovery]
name = "Web Application Discovery"
description = "Comprehensive web application security assessment"
enabled = false  # Disabled by default - requires explicit activation
parallel = true
steps = [
    { template = "http-headers", condition = "always", priority = 1 },
    { template = "robots-txt-fetch", condition = "always", priority = 1 },
    { template = "cert-analysis-basic", condition = "https_detected", priority = 2 },
    { template = "wordpress-scan", condition = "wordpress_detected", priority = 3 },
    { template = "admin-finder", condition = "web_server_detected", priority = 3 },
    { template = "directory-enum", condition = "web_server_detected", priority = 4 }
]

[sequences.network_discovery]
name = "Network Service Discovery"
description = "Comprehensive network service enumeration"
enabled = false
parallel = false  # Sequential execution for network scans
steps = [
    { template = "nmap-quick", condition = "always", priority = 1 },
    { template = "ssh-enum", condition = "ssh_detected", priority = 2 },
    { template = "ftp-enum", condition = "ftp_detected", priority = 2 },
    { template = "database-enum", condition = "database_detected", priority = 3 }
]

[sequences.vulnerability_assessment]
name = "Vulnerability Assessment"
description = "Security vulnerability scanning workflow"
enabled = false
parallel = true
steps = [
    { template = "nuclei-quick", condition = "web_server_detected", priority = 1 },
    { template = "nmap-vuln-scan", condition = "always", priority = 2 },
    { template = "ssl-vulnerabilities", condition = "https_detected", priority = 2 }
]

[automation]
# Automation settings
auto_trigger = false        # Automatically trigger workflows based on discoveries
max_depth = 3              # Maximum workflow recursion depth
parallel_workflows = true  # Allow multiple workflows to run simultaneously
smart_scheduling = true    # Intelligently schedule workflow steps
respect_rate_limits = true # Respect rate limiting settings
timeout_per_workflow = 1800 # Maximum time per workflow (30 minutes)

[conditions]
# Conditional logic definitions for workflow triggers

[conditions.basic]
always = { match = "always" }
never = { match = "never" }

[conditions.services]
web_server_detected = { patterns = ["Apache", "nginx", "IIS", "HTTP/"], ports = [80, 443, 8080, 8443] }
database_detected = { patterns = ["MySQL", "PostgreSQL", "MongoDB", "Redis"], ports = [3306, 5432, 27017, 6379] }
ssh_detected = { patterns = ["SSH-", "OpenSSH"], ports = [22] }
ftp_detected = { patterns = ["220 ", "FTP server"], ports = [21] }
https_detected = { patterns = ["SSL", "TLS", "HTTPS"], ports = [443, 8443] }

[conditions.technologies]
cms_detected = { patterns = ["WordPress", "Drupal", "Joomla"] }
wordpress_detected = { patterns = ["wordpress", "wp-content", "wp-admin"] }
php_detected = { patterns = ["X-Powered-By: PHP", "<?php", ".php"] }
nodejs_detected = { patterns = ["X-Powered-By: Express", "Server: Express"] }

[reporting]
# Workflow reporting settings
generate_reports = true    # Generate workflow execution reports
report_format = "markdown" # Report format: markdown, json, txt
include_timeline = true    # Include execution timeline in reports
include_discoveries = true # Include technology discoveries in reports
save_intermediate_results = true # Save results from each workflow step

[notifications]
# Workflow notifications (future feature)
notify_on_completion = false
notify_on_discovery = false
webhook_url = ""
email_notifications = false
slack_webhook = ""

[rate_limiting]
# Rate limiting for workflow automation
max_concurrent_workflows = 3
delay_between_steps = 1     # Seconds between workflow steps
respect_tool_limits = true  # Respect individual tool rate limits
adaptive_delays = true      # Increase delays based on target response times