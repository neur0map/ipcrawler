metadata:
  name: "Nmap Kerberos"
  description: "Kerberos authentication service enumeration with user enumeration and realm detection"
  type: "servicescan"
  priority: 5
  version: "1.0"
  author: "IPCrawler YAML Plugin System"
  tags: ["default", "safe", "kerberos", "active-directory"]

conditions:
  services:
    include: ["^kerberos", "^kpasswd"]

options:
  - name: "min_rate"
    type: "integer"
    default: 5000
    help: "Minimum packet rate per second"
  - name: "max_rate"
    type: "integer"
    default: 10000
    help: "Maximum packet rate per second"
  - name: "timing_template"
    type: "choice"
    choices: ["T1", "T2", "T3", "T4", "T5"]
    default: "T5"
    help: "Nmap timing template"

execution:
  commands:
    - name: "nmap_kerberos_domain_users"
      command: "nmap {nmap_extra} -{timing_template} --min-rate={min_rate} --max-rate={max_rate} -sV -p {port} --script=\"banner,krb5-enum-users\" --script-args krb5-enum-users.realm=\"{domain}\",userdb=\"{username_wordlist}\" -oN \"{scandir}/{protocol}_{port}_kerberos_nmap.txt\" -oX \"{scandir}/xml/{protocol}_{port}_kerberos_nmap.xml\" {address}"
      timeout: 600
      output_file: "{protocol}_{port}_kerberos_nmap.txt"
      conditions:
        - variable: "domain"
          operator: "not_empty"
        - variable: "username_wordlist"
          operator: "not_empty"
    
    - name: "nmap_kerberos_basic"
      command: "nmap {nmap_extra} -{timing_template} --min-rate={min_rate} --max-rate={max_rate} -sV -p {port} --script=\"banner,krb5-enum-users\" -oN \"{scandir}/{protocol}_{port}_kerberos_nmap.txt\" -oX \"{scandir}/xml/{protocol}_{port}_kerberos_nmap.xml\" {address}"
      timeout: 600
      output_file: "{protocol}_{port}_kerberos_nmap.txt"
      conditions:
        - variable: "domain"
          operator: "is_empty"
        - variable: "username_wordlist"
          operator: "is_empty"

  manual_commands:
    - description: "(nmap) Kerberos user enumeration with domain"
      command: "nmap -T5 -sV -p {port} --script=\"krb5-enum-users\" --script-args krb5-enum-users.realm=\"{domain}\",userdb=\"{username_wordlist}\" {address}"
      conditions:
        - variable: "domain"
          operator: "not_empty"
        - variable: "username_wordlist"
          operator: "not_empty"
    
    - description: "(nmap) Basic Kerberos enumeration"
      command: "nmap -T5 -sV -p {port} --script=\"krb5-enum-users\" {address}"
    
    - description: "(kerbrute) User enumeration"
      command: "kerbrute userenum --dc {address} -d {domain} {username_wordlist}"
      conditions:
        - variable: "domain"
          operator: "not_empty"
        - variable: "username_wordlist"
          operator: "not_empty"
    
    - description: "(GetUserSPNs) Request service tickets"
      command: "GetUserSPNs.py {domain}/{username}:{password} -dc-ip {address} -request"
      conditions:
        - variable: "domain"
          operator: "not_empty"
    
    - description: "(GetNPUsers) ASREPRoast attack"
      command: "GetNPUsers.py {domain}/ -usersfile {username_wordlist} -format hashcat -outputfile asreproast.hashes -dc-ip {address}"
      conditions:
        - variable: "domain"
          operator: "not_empty"
        - variable: "username_wordlist"
          operator: "not_empty"

output:
  patterns:
    # Kerberos Realm Detection
    - pattern: "(?i)kerberos.*realm[:\\s]*([^\\n\\r]+)"
      description: "Kerberos Realm: {match1}"
      severity: "medium"
      category: "realm"
    
    - pattern: "(?i)realm[:\\s]*([^\\n\\r]+)"
      description: "Kerberos Realm Detected: {match1}"
      severity: "medium"
      category: "realm"
    
    # User Enumeration
    - pattern: "(?i)valid.*user[s]?[:\\s]*([^\\n\\r]+)"
      description: "Valid Kerberos Users Found: {match1}"
      severity: "high"
      category: "users"
    
    - pattern: "(?i)user[s]?.*found[:\\s]*([^\\n\\r]+)"
      description: "Kerberos Users Discovered: {match1}"
      severity: "high"
      category: "users"
    
    - pattern: "(?i)principal[s]?[:\\s]*([^\\n\\r]+)"
      description: "Kerberos Principals: {match1}"
      severity: "medium"
      category: "principals"
    
    - pattern: "(?i)service.*principal[s]?[:\\s]*([^\\n\\r]+)"
      description: "Service Principals: {match1}"
      severity: "medium"
      category: "principals"
    
    # Authentication Security Issues
    - pattern: "(?i)pre.*auth.*disabled"
      description: "CRITICAL: Kerberos Pre-Authentication Disabled - ASREPRoast attack possible"
      severity: "critical"
      category: "security"
    
    - pattern: "(?i)asreproast.*vulnerable"
      description: "CRITICAL: ASREPRoast vulnerability detected"
      severity: "critical"
      category: "vulnerability"
    
    - pattern: "(?i)kerberoast.*vulnerable"
      description: "CRITICAL: Kerberoasting vulnerability detected"
      severity: "critical"
      category: "vulnerability"
    
    - pattern: "(?i)weak.*encryption.*types"
      description: "HIGH: Weak Kerberos encryption types detected"
      severity: "high"
      category: "security"
    
    # Domain Controller Information
    - pattern: "(?i)domain.*controller[:\\s]*([^\\n\\r]+)"
      description: "Domain Controller: {match1}"
      severity: "info"
      category: "domain"
    
    - pattern: "(?i)kdc[:\\s]*([^\\n\\r]+)"
      description: "Key Distribution Center: {match1}"
      severity: "info"
      category: "domain"
    
    # Service Information
    - pattern: "(?i)kerberos.*version[:\\s]*([^\\n\\r]+)"
      description: "Kerberos Version: {match1}"
      severity: "info"
      category: "version"
    
    - pattern: "(?i)supported.*encryption.*types[:\\s]*([^\\n\\r]+)"
      description: "Supported Encryption Types: {match1}"
      severity: "info"
      category: "encryption"
    
    - pattern: "(?i)ticket.*granting.*service"
      description: "Ticket Granting Service (TGS) detected"
      severity: "info"
      category: "service"
    
    - pattern: "(?i)authentication.*service"
      description: "Authentication Service (AS) detected"
      severity: "info"
      category: "service"
    
    # Time and Clock Information
    - pattern: "(?i)time.*skew[:\\s]*([^\\n\\r]+)"
      description: "Time Skew Detected: {match1}"
      severity: "medium"
      category: "time"
    
    - pattern: "(?i)clock.*skew.*too.*large"
      description: "HIGH: Clock skew too large for Kerberos authentication"
      severity: "high"
      category: "time"
    
    # Password Policy
    - pattern: "(?i)password.*policy[:\\s]*([^\\n\\r]+)"
      description: "Password Policy: {match1}"
      severity: "medium"
      category: "policy"
    
    - pattern: "(?i)lockout.*policy[:\\s]*([^\\n\\r]+)"
      description: "Account Lockout Policy: {match1}"
      severity: "medium"
      category: "policy"
    
    # Error Messages
    - pattern: "(?i)authentication.*failed"
      description: "Kerberos authentication failed"
      severity: "info"
      category: "authentication"
    
    - pattern: "(?i)ticket.*expired"
      description: "Kerberos ticket expired"
      severity: "info"
      category: "authentication"
    
    - pattern: "(?i)service.*unavailable"
      description: "Kerberos service unavailable"
      severity: "low"
      category: "availability"
    
    - pattern: "(?i)connection.*refused"
      description: "Kerberos connection refused"
      severity: "low"
      category: "connectivity"
    
    # Service Ticket Information
    - pattern: "(?i)service.*ticket[s]?[:\\s]*([^\\n\\r]+)"
      description: "Service Tickets: {match1}"
      severity: "medium"
      category: "tickets"
    
    - pattern: "(?i)tgt.*ticket[s]?[:\\s]*([^\\n\\r]+)"
      description: "Ticket Granting Tickets: {match1}"
      severity: "medium"
      category: "tickets"

  technology_detection:
    - pattern: "(?i)microsoft.*kerberos"
      technology: "Microsoft Kerberos"
    
    - pattern: "(?i)active.*directory.*kerberos"
      technology: "Active Directory Kerberos"
    
    - pattern: "(?i)mit.*kerberos.*([\\d\\.]+)"
      technology: "MIT Kerberos"
      version_group: 1
    
    - pattern: "(?i)heimdal.*kerberos.*([\\d\\.]+)"
      technology: "Heimdal Kerberos"
      version_group: 1

requirements:
  tools:
    - name: "nmap"
      check_command: "nmap --version"
      install_hint: "apt-get install nmap"

  variables:
    - name: "domain"
      description: "Target domain for Kerberos enumeration"
      required: false
      source: "global"
    
    - name: "username_wordlist"
      description: "Username wordlist for user enumeration"
      required: false
      source: "global"

debug:
  log_level: "info"
  trace_decisions: false
  show_command_output: false