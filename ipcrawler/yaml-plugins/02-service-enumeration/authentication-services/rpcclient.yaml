metadata:
  name: "RPC Client"
  description: "Remote Procedure Call (RPC) client enumeration and testing"
  type: "servicescan"
  priority: 5
  version: "1.0"
  author: "IPCrawler YAML Plugin System"
  tags: ["default", "safe", "rpc"]

conditions:
  services:
    include: ["^msrpc", "^rpcbind", "^erpc"]

options:
  - name: "timeout"
    type: "integer"
    default: 30
    help: "Connection timeout in seconds"

execution:
  manual_commands:
    - description: "(rpcclient) Anonymous RPC connection"
      command: "rpcclient -p {port} -U \"\" {address}"
    
    - description: "(rpcclient) RPC connection with null session"
      command: "rpcclient -p {port} -U \"\" -N {address}"
    
    - description: "(rpcclient) RPC connection with credentials"
      command: "rpcclient -p {port} -U \"<username>%<password>\" {address}"
    
    - description: "(rpcclient) RPC connection with domain credentials"
      command: "rpcclient -p {port} -U \"{domain}\\<username>%<password>\" {address}"
      conditions:
        - variable: "domain"
          operator: "not_empty"
    
    - description: "(rpcinfo) List RPC services"
      command: "rpcinfo -p {address}"
    
    - description: "(rpcinfo) Query specific port"
      command: "rpcinfo -T tcp {address} {port}"
    
    - description: "(nmap) RPC service enumeration"
      command: "nmap -T5 -sV -p {port} --script=\"rpc-grind,rpcinfo,msrpc-enum\" {address}"
    
    - description: "(enum4linux) Complete RPC enumeration"
      command: "enum4linux -a {address}"
    
    - description: "(smbclient) List shares via RPC"
      command: "smbclient -L //{address} -N"
    
    - description: "(net) RPC share enumeration"
      command: "net rpc share -I {address} -U \"\""

output:
  patterns:
    # RPC Service Detection
    - pattern: "(?i)rpc.*service.*detected"
      description: "RPC service detected"
      severity: "medium"
      category: "detection"
    
    - pattern: "(?i)msrpc.*service"
      description: "Microsoft RPC service detected"
      severity: "medium"
      category: "detection"
    
    - pattern: "(?i)rpcbind.*service"
      description: "RPC bind service detected"
      severity: "medium"
      category: "detection"
    
    - pattern: "(?i)endpoint.*mapper"
      description: "RPC endpoint mapper detected"
      severity: "medium"
      category: "detection"
    
    # Authentication and Access
    - pattern: "(?i)anonymous.*access.*allowed"
      description: "CRITICAL: Anonymous RPC access allowed"
      severity: "critical"
      category: "security"
    
    - pattern: "(?i)null.*session.*allowed"
      description: "HIGH: RPC null session allowed"
      severity: "high"
      category: "security"
    
    - pattern: "(?i)authentication.*successful"
      description: "RPC authentication successful"
      severity: "high"
      category: "authentication"
    
    - pattern: "(?i)login.*successful"
      description: "RPC login successful"
      severity: "high"
      category: "authentication"
    
    - pattern: "(?i)access.*granted"
      description: "RPC access granted"
      severity: "high"
      category: "authentication"
    
    - pattern: "(?i)authentication.*failed"
      description: "RPC authentication failed"
      severity: "info"
      category: "authentication"
    
    - pattern: "(?i)access.*denied"
      description: "RPC access denied"
      severity: "info"
      category: "authentication"
    
    - pattern: "(?i)invalid.*credentials"
      description: "RPC invalid credentials"
      severity: "info"
      category: "authentication"
    
    # RPC Programs and Services
    - pattern: "(?i)rpc.*program[s]?[:\\s]*([^\\n\\r]+)"
      description: "RPC Programs Available: {match1}"
      severity: "medium"
      category: "services"
    
    - pattern: "(?i)program.*number[:\\s]*([^\\n\\r]+)"
      description: "RPC Program Number: {match1}"
      severity: "info"
      category: "services"
    
    - pattern: "(?i)version.*number[:\\s]*([^\\n\\r]+)"
      description: "RPC Program Version: {match1}"
      severity: "info"
      category: "services"
    
    - pattern: "(?i)procedure[s]?[:\\s]*([^\\n\\r]+)"
      description: "RPC Procedures: {match1}"
      severity: "medium"
      category: "services"
    
    # UUID and Interface Information
    - pattern: "(?i)uuid[:\\s]*([a-f0-9\\-]+)"
      description: "RPC Interface UUID: {match1}"
      severity: "info"
      category: "interfaces"
    
    - pattern: "(?i)interface[s]?[:\\s]*([^\\n\\r]+)"
      description: "RPC Interfaces: {match1}"
      severity: "medium"
      category: "interfaces"
    
    - pattern: "(?i)endpoint[s]?[:\\s]*([^\\n\\r]+)"
      description: "RPC Endpoints: {match1}"
      severity: "medium"
      category: "interfaces"
    
    # Domain and System Information
    - pattern: "(?i)domain.*name[:\\s]*([^\\n\\r]+)"
      description: "Domain Name: {match1}"
      severity: "info"
      category: "domain"
    
    - pattern: "(?i)workgroup[:\\s]*([^\\n\\r]+)"
      description: "Workgroup: {match1}"
      severity: "info"
      category: "domain"
    
    - pattern: "(?i)server.*name[:\\s]*([^\\n\\r]+)"
      description: "Server Name: {match1}"
      severity: "info"
      category: "system"
    
    - pattern: "(?i)computer.*name[:\\s]*([^\\n\\r]+)"
      description: "Computer Name: {match1}"
      severity: "info"
      category: "system"
    
    # User and Group Information
    - pattern: "(?i)user[s]?.*enumerated[:\\s]*([^\\n\\r]+)"
      description: "Users Enumerated: {match1}"
      severity: "high"
      category: "users"
    
    - pattern: "(?i)group[s]?.*enumerated[:\\s]*([^\\n\\r]+)"
      description: "Groups Enumerated: {match1}"
      severity: "high"
      category: "users"
    
    - pattern: "(?i)administrator[s]?[:\\s]*([^\\n\\r]+)"
      description: "Administrators: {match1}"
      severity: "high"
      category: "users"
    
    - pattern: "(?i)domain.*admin[s]?[:\\s]*([^\\n\\r]+)"
      description: "Domain Admins: {match1}"
      severity: "high"
      category: "users"
    
    # Share Information
    - pattern: "(?i)share[s]?.*found[:\\s]*([^\\n\\r]+)"
      description: "Shares Found: {match1}"
      severity: "medium"
      category: "shares"
    
    - pattern: "(?i)writable.*share[s]?[:\\s]*([^\\n\\r]+)"
      description: "Writable Shares: {match1}"
      severity: "high"
      category: "shares"
    
    - pattern: "(?i)accessible.*share[s]?[:\\s]*([^\\n\\r]+)"
      description: "Accessible Shares: {match1}"
      severity: "medium"
      category: "shares"
    
    # Password Policy Information
    - pattern: "(?i)password.*policy[:\\s]*([^\\n\\r]+)"
      description: "Password Policy: {match1}"
      severity: "medium"
      category: "policy"
    
    - pattern: "(?i)lockout.*policy[:\\s]*([^\\n\\r]+)"
      description: "Account Lockout Policy: {match1}"
      severity: "medium"
      category: "policy"
    
    - pattern: "(?i)min.*password.*length[:\\s]*([^\\n\\r]+)"
      description: "Minimum Password Length: {match1}"
      severity: "info"
      category: "policy"
    
    - pattern: "(?i)password.*complexity[:\\s]*([^\\n\\r]+)"
      description: "Password Complexity: {match1}"
      severity: "info"
      category: "policy"
    
    # Security Information
    - pattern: "(?i)security.*descriptor[:\\s]*([^\\n\\r]+)"
      description: "Security Descriptor: {match1}"
      severity: "info"
      category: "security"
    
    - pattern: "(?i)acl.*entries[:\\s]*([^\\n\\r]+)"
      description: "ACL Entries: {match1}"
      severity: "medium"
      category: "security"
    
    - pattern: "(?i)privilege[s]?[:\\s]*([^\\n\\r]+)"
      description: "Privileges: {match1}"
      severity: "medium"
      category: "privileges"
    
    # Operating System Information
    - pattern: "(?i)os.*version[:\\s]*([^\\n\\r]+)"
      description: "OS Version: {match1}"
      severity: "info"
      category: "os"
    
    - pattern: "(?i)windows.*version[:\\s]*([^\\n\\r]+)"
      description: "Windows Version: {match1}"
      severity: "info"
      category: "os"
    
    - pattern: "(?i)build.*number[:\\s]*([^\\n\\r]+)"
      description: "Build Number: {match1}"
      severity: "info"
      category: "os"
    
    # Service Information
    - pattern: "(?i)service[s]?.*running[:\\s]*([^\\n\\r]+)"
      description: "Services Running: {match1}"
      severity: "medium"
      category: "services"
    
    - pattern: "(?i)process[es]?.*running[:\\s]*([^\\n\\r]+)"
      description: "Processes Running: {match1}"
      severity: "medium"
      category: "services"
    
    # Error Messages
    - pattern: "(?i)connection.*refused"
      description: "RPC connection refused"
      severity: "low"
      category: "connectivity"
    
    - pattern: "(?i)service.*unavailable"
      description: "RPC service unavailable"
      severity: "low"
      category: "availability"
    
    - pattern: "(?i)timeout.*exceeded"
      description: "RPC connection timeout"
      severity: "low"
      category: "connectivity"
    
    - pattern: "(?i)host.*unreachable"
      description: "RPC host unreachable"
      severity: "low"
      category: "connectivity"
    
    # Registry Information
    - pattern: "(?i)registry.*key[s]?[:\\s]*([^\\n\\r]+)"
      description: "Registry Keys: {match1}"
      severity: "medium"
      category: "registry"
    
    - pattern: "(?i)registry.*value[s]?[:\\s]*([^\\n\\r]+)"
      description: "Registry Values: {match1}"
      severity: "medium"
      category: "registry"
    
    # Trust Relationships
    - pattern: "(?i)trust.*relationship[s]?[:\\s]*([^\\n\\r]+)"
      description: "Trust Relationships: {match1}"
      severity: "medium"
      category: "trust"
    
    - pattern: "(?i)trusted.*domain[s]?[:\\s]*([^\\n\\r]+)"
      description: "Trusted Domains: {match1}"
      severity: "medium"
      category: "trust"

  technology_detection:
    - pattern: "(?i)microsoft.*rpc"
      technology: "Microsoft RPC"
    
    - pattern: "(?i)samba.*([\\d\\.]+)"
      technology: "Samba"
      version_group: 1
    
    - pattern: "(?i)windows.*server.*([\\d]+)"
      technology: "Windows Server"
      version_group: 1
    
    - pattern: "(?i)active.*directory"
      technology: "Active Directory"

requirements:
  tools:
    - name: "rpcclient"
      check_command: "rpcclient --version"
      install_hint: "apt-get install samba-common-bin"

  variables:
    - name: "domain"
      description: "Target domain for RPC authentication"
      required: false
      source: "global"

debug:
  log_level: "info"
  trace_decisions: false
  show_command_output: false