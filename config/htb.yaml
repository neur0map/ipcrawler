metadata:
  name: "HackTheBox Reconnaissance Profile"
  description: "Comprehensive reconnaissance profile optimized for HTB environments with advanced tool chaining"
  version: "1.0"
  author: "ipcrawler-rust"
  tags: ["htb", "ctf", "reconnaissance", "pentest"]

tools:
  # Phase 1: Port Discovery
  - name: "naabu_top5k"
    command: "naabu -host {target} -top-ports 1000 -silent -timeout 30000 -rate 500 -o {output}/raw/naabu_ports.txt"
    timeout: 300
    output_file: "naabu_ports.txt"
    enabled: true
    metadata:
      phase: "port_discovery"
      description: "High-speed port discovery using top 5000 ports"
      requires_sudo: false

  # Phase 1: Service Analysis
  - name: "nmap_service_deep"
    command: "nmap -sV -sC -T4 -A --script=default,vuln {target} -p {discovered_ports} -oX {output}/raw/nmap_services.xml -oN {output}/raw/nmap_services.txt"
    timeout: 600
    output_file: "nmap_services.xml"
    enabled: true
    metadata:
      phase: "service_analysis"
      description: "Deep service analysis with vulnerability scripts"
      requires_ports: true
      requires_sudo: false

  # Phase 2: Virtual Host Discovery (Primary)
  - name: "ffuf_vhost"
    command: "ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://{target} -H 'Host: FUZZ.{target_domain}' -fc 404,403 -fs 0 -t 100 -timeout 10 -o {output}/raw/ffuf_vhosts.json -of json"
    timeout: 300
    output_file: "ffuf_vhosts.json"
    enabled: true
    metadata:
      phase: "vhost_discovery"
      description: "Virtual host enumeration using ffuf"
      requires_sudo: false
      target_type: "domain"

  # Phase 2: Virtual Host Discovery (Backup)
  - name: "gobuster_vhost"
    command: "gobuster vhost -u http://{target} --append-domain -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50 --timeout 10s -o {output}/raw/gobuster_vhosts.txt"
    timeout: 300
    output_file: "gobuster_vhosts.txt"
    enabled: true
    metadata:
      phase: "vhost_discovery"
      description: "Virtual host enumeration using gobuster"
      requires_sudo: false
      target_type: "domain"

  # Phase 3: DNS Intelligence
  - name: "dig_comprehensive"
    command: "bash -c 'echo \"=== A Records ===\" > {output}/raw/dig_enum.txt; dig {target} A +short >> {output}/raw/dig_enum.txt; echo \"=== MX Records ===\" >> {output}/raw/dig_enum.txt; dig {target} MX +short >> {output}/raw/dig_enum.txt; echo \"=== NS Records ===\" >> {output}/raw/dig_enum.txt; dig {target} NS +short >> {output}/raw/dig_enum.txt; echo \"=== TXT Records ===\" >> {output}/raw/dig_enum.txt; dig {target} TXT +short >> {output}/raw/dig_enum.txt; echo \"=== PTR Records ===\" >> {output}/raw/dig_enum.txt; dig -x {target_ip} +short >> {output}/raw/dig_enum.txt 2>/dev/null || echo \"No PTR records\" >> {output}/raw/dig_enum.txt'"
    timeout: 120
    output_file: "dig_enum.txt"
    enabled: true
    metadata:
      phase: "dns_intelligence"
      description: "Comprehensive DNS record enumeration"
      requires_sudo: false

  # Phase 4: Hosts File Management
  - name: "update_etc_hosts"
    command: >
      bash -c 'if [ -f {output}/raw/ffuf_vhosts.json ]; then 
      cat {output}/raw/ffuf_vhosts.json | jq -r ".results[]?.host // empty" | sed "s/FUZZ\\.//g" | 
      while read vhost; do 
        if [ ! -z "$vhost" ] && ! grep -q "$vhost" /etc/hosts; then 
          echo "{target_ip} $vhost.{target_domain}" | sudo tee -a /etc/hosts; 
        fi; 
      done; fi'
    timeout: 60
    output_file: "hosts_update.log"
    enabled: true
    metadata:
      phase: "hosts_management"
      description: "Add discovered vhosts to /etc/hosts"
      requires_sudo: true

  # Phase 5: Web Technology Fingerprinting
  - name: "whatweb_scan"
    command: "whatweb {target} -a 3 --color=never --log-json={output}/raw/whatweb.json"
    timeout: 180
    output_file: "whatweb.json"
    enabled: true
    metadata:
      phase: "web_analysis"
      description: "Web technology fingerprinting"
      requires_sudo: false

  # Phase 5: Directory Discovery
  - name: "ffuf_dirs"
    command: "ffuf -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://{target}/FUZZ -fc 404,403 -fs 0 -t 100 -timeout 10 -recursion -recursion-depth 2 -o {output}/raw/ffuf_dirs.json -of json"
    timeout: 900
    output_file: "ffuf_dirs.json"
    enabled: true
    metadata:
      phase: "content_discovery"
      description: "Recursive directory discovery"
      requires_sudo: false

  # Phase 5: File Extension Discovery
  - name: "ffuf_files"
    command: "ffuf -w /usr/share/seclists/Discovery/Web-Content/common.txt -u http://{target}/FUZZ -e .php,.html,.txt,.xml,.json,.bak,.old,.backup,.config,.conf,.log -fc 404,403 -fs 0 -t 100 -timeout 10 -o {output}/raw/ffuf_files.json -of json"
    timeout: 600
    output_file: "ffuf_files.json"
    enabled: true
    metadata:
      phase: "content_discovery"
      description: "File discovery with common extensions"
      requires_sudo: false

  # Phase 5: Vulnerability Scanning
  - name: "nikto_scan"
    command: "nikto -h {target} -Format xml -output {output}/raw/nikto.xml -timeout 10 -maxtime 600"
    timeout: 700
    output_file: "nikto.xml"
    enabled: true
    metadata:
      phase: "vulnerability_scan"
      description: "Web vulnerability scanning"
      requires_sudo: false

  # Phase 6: Custom Wordlist Generation (Final Step)
  - name: "cewl_wordgen"
    command: "cewl http://{target} -d 3 -m 4 -w {output}/processed/custom_wordlist.txt --lowercase --email_file {output}/processed/emails.txt -v"
    timeout: 300
    output_file: "custom_wordlist.txt"
    enabled: true
    metadata:
      phase: "wordlist_generation"
      description: "Generate custom wordlist from target website"
      requires_sudo: false

chains:
  # Phase 1: Port to Service Chain
  - name: "port_to_service"
    from: "naabu_top5k"
    to: "nmap_service_deep"
    condition: "has_output"

  # Phase 2: Service to VHost Discovery
  - name: "service_to_vhost_ffuf"
    from: "nmap_service_deep"
    to: "ffuf_vhost"
    condition: "exit_success"

  - name: "service_to_vhost_gobuster"
    from: "nmap_service_deep"
    to: "gobuster_vhost"
    condition: "exit_success"

  # Phase 3: VHost to DNS Intelligence
  - name: "vhost_to_dns"
    from: "ffuf_vhost"
    to: "dig_comprehensive"
    condition: "exit_success"

  # Phase 4: VHost to Hosts Management
  - name: "vhost_to_hosts"
    from: "ffuf_vhost"
    to: "update_etc_hosts"
    condition: "has_output"

  # Phase 5: DNS to Web Analysis
  - name: "dns_to_whatweb"
    from: "dig_comprehensive"
    to: "whatweb_scan"
    condition: "exit_success"

  - name: "dns_to_dirs"
    from: "dig_comprehensive"
    to: "ffuf_dirs"
    condition: "exit_success"

  - name: "dns_to_files"
    from: "dig_comprehensive"
    to: "ffuf_files"
    condition: "exit_success"

  - name: "dns_to_nikto"
    from: "dig_comprehensive"
    to: "nikto_scan"
    condition: "exit_success"

  # Phase 6: Final Wordlist Generation
  - name: "whatweb_to_cewl"
    from: "whatweb_scan"
    to: "cewl_wordgen"
    condition: "exit_success"

globals:
  max_concurrent: 15
  retry_count: 3
  log_level: "info"
  create_output_dirs: true
  output_structure:
    - "raw"
    - "processed"
    - "logs"
  
  # HTB-specific settings
  htb_optimized: true
  performance_mode: "high"
  
  # Wordlist paths (customize as needed)
  wordlists:
    subdomains: "/usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt"
    directories: "/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt"
    files: "/usr/share/seclists/Discovery/Web-Content/common.txt"
    
  # Common file extensions for HTB
  file_extensions:
    - "php"
    - "html"
    - "txt"
    - "xml"
    - "json"
    - "bak"
    - "old"
    - "backup"
    - "config"
    - "conf"
    - "log"
    - "sql"
    - "zip"
    - "tar"
    - "gz"