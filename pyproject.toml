[tool.poetry]
name = "ipcrawler"
version = "2.1.0"
description = "A multi-threaded network reconnaissance tool which performs automated enumeration of services."
authors = ["neur0map"]
license = "GNU GPL v3"
exclude = ["ipcrawler.py"]
packages = [
	{ include = "ipcrawler" },
]

[tool.poetry.dependencies]
python = "^3.8"
platformdirs = "^4.3.6"
colorama = "^0.4.5"
cryptography = "^44.0.1"  # Security fix for CVE-2024-12797
impacket = "^0.10.0"
psutil = "^5.9.4"
requests = "^2.28.1"
toml = "^0.10.2"
Unidecode = "^1.3.1"

[tool.poetry.dev-dependencies]

[tool.poetry.scripts]
ipcrawler = "ipcrawler.main:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Black code formatting configuration
[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
)/
'''

# Flake8 configuration
[tool.flake8]
max-line-length = 127
max-complexity = 15
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    ".eggs",
    "*.egg",
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
]

[tool.pylint.format]
max-line-length = 127

# MyPy configuration
[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args
