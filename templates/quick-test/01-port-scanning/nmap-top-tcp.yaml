metadata:
  name: "Quick Top TCP Port Scanner"
  description: "Fast scan of top 1000 TCP ports using nmap"
  type: "portscan"
  priority: 1
  version: "1.0"
  author: "IPCrawler Quick Test Template"
  tags:
    - quick
    - portscan
    - tcp
    - nmap

conditions:
  # Run for all targets - port scanner should not filter by services
  services:
    include: []
  protocols:
    include: ["tcp"]

options:
  - name: "top_ports"
    type: "integer"
    default: 80
    help: "Number of top ports to scan (100, 1000, or custom number)"
  - name: "timing"
    type: "choice"
    choices: ["T2", "T3", "T4", "T5"]
    default: "T4"
    help: "Nmap timing template (T4 = aggressive, T3 = normal)"
  - name: "service_detection"
    type: "boolean"
    default: true
    help: "Enable service version detection (-sV)"
  - name: "script_scan"
    type: "boolean"
    default: true
    help: "Enable default script scan (-sC)"

execution:
  commands:
    - name: "nmap_top_tcp_scan"
      command: "nmap -{timing} --top-ports {top_ports} {service_opts} -oN \"{scandir}/_quick_tcp_nmap.txt\" -oX \"{scandir}/xml/_quick_tcp_nmap.xml\" {address}"
      timeout: 1800
      output_file: "_quick_tcp_nmap.txt"
    
    - name: "nmap_summary"
      command: "echo 'Nmap scan completed for {address}' && echo 'Scan timestamp: $(date)' && echo 'Top {top_ports} TCP ports scanned' && grep -E '(open|filtered)' \"{scandir}/_quick_tcp_nmap.txt\" | wc -l | xargs echo 'Discovered services:'"
      timeout: 10
      output_file: "_scan_summary.txt"

output:
  patterns:
    - pattern: "^(\\d+)/(tcp|udp)\\s+open\\s+(\\S+)"
      description: "Open Port: {match1}/{match2} - {match3}"
      severity: "info"
      category: "port_discovery"
    
    - pattern: "^(\\d+)/(tcp|udp)\\s+open\\s+(\\S+)\\s+(.+)"
      description: "Open Service: {match1}/{match2} - {match3} ({match4})"
      severity: "info"
      category: "service_discovery"
    
    - pattern: "(?i)(\\d+)/(tcp|udp)\\s+open\\s+ssl/http"
      description: "HTTPS Service Found: Port {match1}"
      severity: "info"
      category: "web_service"
    
    - pattern: "(?i)(\\d+)/(tcp|udp)\\s+open\\s+http"
      description: "HTTP Service Found: Port {match1}"
      severity: "info"
      category: "web_service"
    
    - pattern: "(?i)(\\d+)/(tcp|udp)\\s+open\\s+ssh"
      description: "SSH Service Found: Port {match1}"
      severity: "info"
      category: "remote_access"
    
    - pattern: "(?i)service unrecognized"
      description: "Unrecognized service detected - manual investigation needed"
      severity: "low"
      category: "unknown_service"

  service_detection:
    - pattern: "^(\\d+)/(tcp|udp)\\s+open\\s+(\\S+)"
      service_name: "{match3}"
    
    # Special handling for common misidentifications
    - pattern: "(\\d+)/tcp\\s+open\\s+ssl/http"
      service_name: "https"
      port_override: "{match1}"
    
    - pattern: "(\\d+)/tcp\\s+open\\s+http"
      service_name: "http"
      port_override: "{match1}"

  technology_detection:
    - pattern: "(?i)apache"
      technology: "Apache"
    - pattern: "(?i)nginx"
      technology: "Nginx"
    - pattern: "(?i)iis"
      technology: "IIS"
    - pattern: "(?i)openssh"
      technology: "OpenSSH"

requirements:
  tools:
    - name: "nmap"
      check_command: "nmap --version"
      install_hint: "apt-get install nmap"

debug:
  log_level: "info"
  trace_decisions: true
  show_command_output: false

variables:
  top_ports: 80
  timing: "T4"
  service_detection: true
  script_scan: true