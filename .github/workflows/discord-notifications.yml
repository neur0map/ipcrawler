# .github/workflows/discord-notify.yml
name: Discord Commit Notifications

on:
  push:
    branches: [main, master, develop]
  pull_request:
    types: [opened, closed]

# least-privilege token
permissions:
  contents: read

# cancel older runs when a new push arrives on the same ref
concurrency:
  group: notify-${{ github.ref }}
  cancel-in-progress: true

env:
  # tweak this without touching the workflow:
  IMPORTANT_REGEX: '(feat|feature|perf|refactor|BREAKING CHANGE|chore\\(release\\)|release[: ]|\\bv?\\d+\\.\\d+\\.\\d+)'
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  notify-discord:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1            # minimal clone; we parse the event JSON instead of git log

      - name: Install jq
        run: sudo apt-get update && sudo apt-get -y install jq

      - name: Group commits and post to Discord
        env:
          EVT_PATH: ${{ github.event_path }}
        shell: bash
        run: |
          set -euo pipefail

          # ---------- split payload ----------
          mapfile -t IMPORTANT <<<"$(jq -cr --arg re "$IMPORTANT_REGEX" '.commits[] | select(.message | test($re;"i"))' "$EVT_PATH")"
          mapfile -t ROUTINE   <<<"$(jq -cr --arg re "$IMPORTANT_REGEX" '.commits[] | select(.message | test($re;"i") | not)' "$EVT_PATH")"

          # ---------- helper ----------
          send() {
            local json="$1"
            local code
            code=$(curl -s -o /dev/null -w '%{http_code}' -H 'Content-Type: application/json' -d "$json" "$DISCORD_WEBHOOK" || true)
            echo "Discord HTTP $code"
            sleep 1   # stay well under 30 reqs/min
          }

          # ---------- important commits ----------
          for row in "${IMPORTANT[@]}"; do
            sha=$(jq -r '.id'      <<<"$row" | cut -c1-7)
            msg=$(jq -r '.message' <<<"$row" | head -n1 | cut -c1-200)
            url=$(jq -r '.url'     <<<"$row")
            who=$(jq -r '.author.name' <<<"$row")

            payload=$(jq -nc --arg sha "$sha" --arg msg "$msg" --arg url "$url" --arg who "$who" '
              {username:"ipcrawler-bot",
               embeds:[{
                 title:"🚀 " + $sha + " – " + $msg,
                 url:$url,
                 color:3066993,
                 fields:[
                   {name:"Contributor", value:$who, inline:true},
                   {name:"Commit",      value:"`" + $sha + "`", inline:true}
                 ],
                 timestamp:(now|strftime("%Y-%m-%dT%H:%M:%SZ"))
               }]}')
            send "$payload"
          done

          # ---------- batch last ≤5 routine ----------
          if ((${#ROUTINE[@]})); then
            summary=""
            start=$(( ${#ROUTINE[@]} > 5 ? ${#ROUTINE[@]}-5 : 0 ))
            for ((i=start; i<${#ROUTINE[@]}; i++)); do
              sha=$(jq -r '.id'      <<<"${ROUTINE[$i]}" | cut -c1-7)
              msg=$(jq -r '.message' <<<"${ROUTINE[$i]}" | head -n1 | cut -c1-120)
              summary+="\n- \`$sha\`: $msg"
            done

            payload=$(jq -nc --arg n "${#ROUTINE[@]}" --arg s "$summary" '
              {username:"ipcrawler-bot",
               embeds:[{
                 title:"📦 Batched routine commits (" + $n + ")",
                 description:$s,
                 color:8421504,
                 timestamp:(now|strftime("%Y-%m-%dT%H:%M:%SZ"))
               }]}')
            send "$payload"
          fi

  notify-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Send PR notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        shell: bash
        run: |
          set -euo pipefail
          action="${{ github.event.action }}"
          merged="${{ github.event.pull_request.merged }}"

          if   [[ "$action" == "opened" ]]; then color=3066993; emoji="🔀"; tag="opened"
          elif [[ "$action" == "closed" && "$merged" == "true" ]]; then color=5814783; emoji="✅"; tag="merged"
          elif [[ "$action" == "closed" ]]; then color=15158332; emoji="❌"; tag="closed"
          else color=16776960; emoji="🔄"; tag="$action"; fi

          payload=$(jq -nc \
            --arg title "$emoji Mission Status: Pull Request $tag" \
            --arg op "${{ github.event.pull_request.title }}" \
            --arg url "${{ github.event.pull_request.html_url }}" \
            --arg user "${{ github.event.pull_request.user.login }}" \
            --arg head "${{ github.event.pull_request.head.ref }}" \
            --arg base "${{ github.event.pull_request.base.ref }}" \
            --arg adds "${{ github.event.pull_request.additions }}" \
            --arg dels "${{ github.event.pull_request.deletions }}" \
            --argjson color "$color" '
            {username:"ipcrawler-bot",
             embeds:[{
               title:$title,
               description:"**Operation:** `" + $op + "`",
               url:$url,
               color:$color,
               fields:[
                 {name:"🎯 Agent",        value:"`" + $user + "`", inline:true},
                 {name:"🌐 Network Path", value:"`" + $head + "` → `" + $base + "`", inline:true},
                 {name:"📡 Payload Size", value:"**[+] " + $adds + "** **[-] " + $dels + "**", inline:true}
               ],
               timestamp:(now|strftime("%Y-%m-%dT%H:%M:%SZ"))
             }]}')
          curl -s -o /dev/null -H 'Content-Type: application/json' -d "$payload" "$DISCORD_WEBHOOK"